name: Publish Nuget .Net4

on:
  push:
    branches: [ "master" ]

  pull_request:
    branches: [ "master" ]

env:
  NUGET_API_SOURCE: "https://api.nuget.org/v3/index.json"
  BASE_PATH: src/Net4
  SOLUTION_NAME: MPSTI.PlenoSoft.Core.Net4
  PROJECT_NAME1: MPSTI.PlenoSoft.Core.Selenium.Net4
  PROJECT_NAME2: MPSTI.PlenoSoft.Core.WatiN.Net4
  PROJECT_NAME3: MPSTI.PlenoSoft.Core.Office.OpenXml
    
jobs:
  build:
    name: Build, Pack & Publish (On windows-latest)
    runs-on: windows-latest

    steps:
    - name: Checkout Git Source
      uses: actions/checkout@v3

    - name: Install NuGet.exe
      uses: NuGet/setup-nuget@v1.1.1
      with:
        nuget-version: 'latest'
        nuget-api-key: ${{ secrets.NUGET_API_KEY }}
  
    - name: Install MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1

    - name: Restore Solution Packages
      run: nuget restore ${{ env.SOLUTION_FILE }}
      env:
        SOLUTION_FILE: ${{ format('{0}/{1}.sln', env.BASE_PATH, env.SOLUTION_NAME) }}

    - name: Build Solution (Release)
      run: msbuild ${{ env.SOLUTION_FILE }} /t:rebuild /p:Configuration=Release
      env:
        SOLUTION_FILE: ${{ format('{0}/{1}.sln', env.BASE_PATH, env.SOLUTION_NAME) }}

    - name: Create Package (Release)
      run: nuget pack -Properties Configuration=Release ${{ env.PROJECT_FILE }}
      env:
        PROJECT_FILE: ${{ format('{0}/{1}/{1}.csproj', env.BASE_PATH, env.PROJECT_NAME1) }}

    - name: Create Package (Release)
      run: nuget pack -Properties Configuration=Release ${{ env.PROJECT_FILE }}
      env:
        PROJECT_FILE: ${{ format('{0}/{1}/{1}.csproj', env.BASE_PATH, env.PROJECT_NAME2) }}

    - name: Create Package (Release)
      run: nuget pack -Properties Configuration=Release ${{ env.PROJECT_FILE }}
      env:
        PROJECT_FILE: ${{ format('{0}/{1}/{1}.csproj', env.BASE_PATH, env.PROJECT_NAME3) }}

    - name: Publish Package (nuget.org)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}*.nupkg', env.PROJECT_NAME1) }}

    - name: Publish Package (nuget.org)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}*.nupkg', env.PROJECT_NAME2) }}

    - name: Publish Package (nuget.org)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}*.nupkg', env.PROJECT_NAME3) }}

# https://www.zup.com.br/blog/github-actions-variaveis-de-ambiente-e-secrets
# https://docs.github.com/pt/github-ae@latest/actions/learn-github-actions/environment-variables
# https://docs.github.com/en/actions/learn-github-actions/environment-variables  
