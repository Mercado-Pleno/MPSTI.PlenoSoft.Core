name: Publish Nuget .Net6

on:
  push:
    branches: [ "master" ]

  pull_request:
    branches: [ "master" ]

env:
  NUGET_API_SOURCE: "https://api.nuget.org/v3/index.json"
  BASE_PATH: src

jobs:
  build:
    name: Build, Pack & Publish (On ubuntu-latest)
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Git Source
      uses: actions/checkout@v3
      
    - name: Install NuGet.exe
      uses: NuGet/setup-nuget@v1.1.1
      with:
        nuget-version: 'latest'
        nuget-api-key: ${{ secrets.NUGET_API_KEY }}

    - name: Install DotNet.exe
      uses: actions/setup-dotnet@v3.0.3
      with:
        dotnet-version: '6.0.x'

    - name: Build Solution (Release)
      run: dotnet build --configuration Release ${{ env.SOLUTION_FILE }}
      env:
        SOLUTION_FILE: ${{ format('{0}/{1}.sln', env.BASE_PATH, 'MPSTI.PlenoSoft.Core') }}

    - name: Test Project (Core.Test.dll)
      run: dotnet test --no-restore --no-build -v normal ${{ env.PROJECT_DLL }}
      env:
        PROJECT_DLL: ${{ format('**/Bin/Release/**/{0}.dll', 'MPSTI.PlenoSoft.Core.Test') }}

    - name: Publish Package (Core.Azure.CosmosDb)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.Azure.CosmosDb') }}

#    - name: Publish Package (Core.Azure.Functions)
#      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
#      env:
#        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.Azure.Functions') }}

    - name: Publish Package (Core.Azure.ServiceBus)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.Azure.ServiceBus') }}

    - name: Publish Package (Core.Caches)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.Caches') }}

    - name: Publish Package (Core.Camunda)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.Camunda') }}

    - name: Publish Package (Core.Collections)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.Collections') }}

    - name: Publish Package (Core.CrossProject)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.CrossProject') }}

    - name: Publish Package (Core.CrossProject.Web)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.CrossProject.Web') }}

    - name: Publish Package (Core.Extensions)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.Extensions') }}

    - name: Publish Package (Core.Flux)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.Flux') }}

    - name: Publish Package (Core.MongoDb)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.MongoDb') }}

    - name: Publish Package (Core.Office.EPPlus)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.Office.EPPlus') }}

    - name: Publish Package (Core.Selenium)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.Selenium') }}

    - name: Publish Package (Core.xUnit)
      run: nuget push -SkipDuplicate -src ${{ env.NUGET_API_SOURCE }} ${{ env.PACKAGE_FILE }}
      env:
        PACKAGE_FILE: ${{ format('**/{0}/**/{0}*.nupkg', 'MPSTI.PlenoSoft.Core.xUnit') }}

# https://www.zup.com.br/blog/github-actions-variaveis-de-ambiente-e-secrets
# https://docs.github.com/pt/github-ae@latest/actions/learn-github-actions/environment-variables
# https://docs.github.com/en/actions/learn-github-actions/environment-variables
